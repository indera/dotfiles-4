" Vundle
filetype off                  " required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
  " it's needed
  Plugin 'gmarik/Vundle.vim'

  Plugin 'christoomey/vim-tmux-navigator'
  Plugin 'edkolev/tmuxline.vim'
  Plugin 'kien/ctrlp.vim'
  Plugin 'mattn/emmet-vim'
  Plugin 'ntpeters/vim-better-whitespace'
  Plugin 'rking/ag.vim'
  Plugin 'scrooloose/nerdtree'
  Plugin 'sheerun/vim-polyglot'
  Plugin 'sjl/gundo.vim'
  Plugin 'tpope/vim-abolish' " for searching and replacing patterns easily
  Plugin 'tpope/vim-commentary'
  Plugin 'tpope/vim-dispatch'
  Plugin 'tpope/vim-endwise'
  Plugin 'tpope/vim-fugitive'
  Plugin 'tpope/vim-surround' " for delimiters changing
  Plugin 'tpope/vim-unimpaired'

call vundle#end()            " required
filetype plugin indent on    " required

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" vim basic config
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  let mapleader = ","

  set autoindent
  set background=dark
  set colorcolumn=81
  set cul
  set expandtab
  set hlsearch
  set ignorecase
  set laststatus=2
  set nobackup
  set noshowmode
  set noswapfile
  set nowrap
  set nowritebackup
  set shell=/bin/zsh
  set shiftwidth=2
  set showtabline=2
  set smartindent
  set smarttab
  set softtabstop=2
  set splitbelow
  set splitright
  set t_Co=256
  set tabstop=2

  if has("mouse")
    set mouse=a
  endif

  syntax on

  map <up> <nop>
  map <down> <nop>
  map <left> <nop>
  map <right> <nop>
  imap <up> <nop>
  imap <down> <nop>
  imap <left> <nop>
  imap <right> <nop>

  cab W! w!
  cab W w
  cab Wa wa
  cab Wq wq
  cab wQ wq
  cab WQ wq
  cab Q! q!
  cab Q q
  cab E e
  cab E! e!

  autocmd BufWritePre * :StripWhitespace
  augroup BgHighlight
    autocmd!
    autocmd WinEnter * set cul
    autocmd WinLeave * set nocul
  augroup END

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" plugins config
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
  " gundo.vim
    map <Leader>u :GundoToggle<CR>
    let g:gundo_close_on_revert = 1

  " nerdtree
    nmap <Leader>o :NERDTreeToggle<CR>
    nmap <Leader>f :NERDTreeFind<CR>
    let NERDTreeQuitOnOpen = 1
    let NERDTreeShowHidden = 1
    let NERDTreeShowLineNumbers = 0

  " base16-vim

  " vim-dispatch
    nmap <Leader>dd :Dispatch
    nmap <Leader>ds :Start
    nmap <Leader>df :FocusDispatch

  " ctrlp
    let g:ctrlp_map = '<Leader>t'
    " Use ag because it's lightning fast and respects .gitignore
    let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden'.
          \  ' --ignore .git '.
          \  ' --ignore _build'.
          \  ' --ignore node_modules'.
          \  ' -g ""'
    let g:ctrlp_use_caching = 0 " ag is fast enough so cache isn't needed
    let g:ctrlp_prompt_mappings = {
          \   'PrtSelectMove("j")':   ['<c-j>'],
          \   'PrtSelectMove("k")':   ['<c-k>'],
          \   'PrtHistory(-1)':       ['<down>'],
          \   'PrtHistory(1)':        ['<up>'],
          \   'ToggleType(1)':        ['<c-l>'],
          \   'ToggleType(-1)':       ['<c-h>'],
          \   'PrtCurLeft()':         ['<left>', '<c-^>'],
          \   'PrtCurRight()':        ['<right>'],
          \   'PrtExit()':            ['<esc>', '<c-c>', '<c-g>', '<c-p>'],
          \ }
